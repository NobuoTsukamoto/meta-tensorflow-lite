# This is a basic workflow to help you get started with Actions

name: Bitbake qemuriscv

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the kirkstone branch
  push:
    branches: [ nanbield ]
  pull_request:
    branches: [ nanbield ]
  schedule:
    - cron: '0 12 * * 5'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  TARGET_VERSION: nanbield
  TARGET_BITBAKE_VERSION: 2.6.1

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  bitbake-riscv:

    strategy:
      matrix:
        target_machine: [qemuriscv64, qemuriscv32]
        tensorflow_version: [2.15.1]
        
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      # Install essential host packages
      - name: Install Pakages
        run: |
          sudo apt-get update
          sudo apt-get -y install gawk wget git-core diffstat unzip texinfo gcc-multilib \
            build-essential chrpath socat cpio python3 python3-pip python3-pexpect xz-utils \
            debianutils iputils-ping python3-git python3-jinja2 libegl1-mesa libsdl1.2-dev \
            pylint xterm zstd liblz4-tool
          sudo apt-get clean
      
      # checkout repository
      - name: Clone poky, meta-raspberrypi, meta-openembedded
        run: |
          sudo chown runner /mnt
          git clone -b ${TARGET_VERSION} git://git.yoctoproject.org/poky.git
          git clone -b ${TARGET_VERSION} https://github.com/riscv/meta-riscv.git
          git clone -b ${TARGET_VERSION} git://git.openembedded.org/meta-openembedded
        working-directory: /mnt

      # Run bitbake
      - name: Bitbake MACHINE=${{ matrix.target_machine }}, TensorFlow-Lite ${{ matrix.tensorflow_version }}
        run: |
          source poky/oe-init-build-env rpi-build
          bitbake-layers add-layer ../meta-openembedded/meta-oe/
          bitbake-layers add-layer ../meta-openembedded/meta-python/
          bitbake-layers add-layer /home/runner/work/meta-tensorflow-lite/meta-tensorflow-lite/
          bitbake-layers add-layer ../meta-riscv/
          cat <<EOF> conf/auto.conf
          FORTRAN:forcevariable = ",fortran"
          PREFERRED_VERSION_python3-tensorflow-lite="${{ matrix.tensorflow_version }}"
          PREFERRED_VERSION_libtensorflow-lite="${{ matrix.tensorflow_version }}"
          EOF
          cat conf/auto.conf
          MACHINE=${{matrix.target_machine}} bitbake python3-tensorflow-lite libtensorflow-lite \
            libtensorflow-lite-c python3-tensorflow-lite-example tensorflow-lite-label-image \
            tensorflow-lite-minimal tensorflow-lite-benchmark libedgetpu-std
          df -h
        working-directory: /mnt
